# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudTasks.V2.Model.Attempt do
  @moduledoc """
  The status of a task attempt.

  ## Attributes

  *   `dispatchTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time that this attempt was dispatched.

      `dispatch_time` will be truncated to the nearest microsecond.
  *   `responseStatus` (*type:* `GoogleApi.CloudTasks.V2.Model.Status.t`, *default:* `nil`) - Output only. The response from the worker for this attempt.

      If `response_time` is unset, then the task has not been attempted or is
      currently running and the `response_status` field is meaningless.
  *   `responseTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time that this attempt response was received.

      `response_time` will be truncated to the nearest microsecond.
  *   `scheduleTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time that this attempt was scheduled.

      `schedule_time` will be truncated to the nearest microsecond.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dispatchTime => DateTime.t(),
          :responseStatus => GoogleApi.CloudTasks.V2.Model.Status.t(),
          :responseTime => DateTime.t(),
          :scheduleTime => DateTime.t()
        }

  field(:dispatchTime, as: DateTime)
  field(:responseStatus, as: GoogleApi.CloudTasks.V2.Model.Status)
  field(:responseTime, as: DateTime)
  field(:scheduleTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTasks.V2.Model.Attempt do
  def decode(value, options) do
    GoogleApi.CloudTasks.V2.Model.Attempt.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTasks.V2.Model.Attempt do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
