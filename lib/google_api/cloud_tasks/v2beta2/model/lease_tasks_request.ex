# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudTasks.V2beta2.Model.LeaseTasksRequest do
  @moduledoc """
  Request message for leasing tasks using LeaseTasks.

  ## Attributes

  *   `filter` (*type:* `String.t`, *default:* `nil`) - `filter` can be used to specify a subset of tasks to lease.

      When `filter` is set to `tag=<my-tag>` then the
      response will contain only tasks whose
      tag is equal to `<my-tag>`. `<my-tag>` must be
      less than 500 characters.

      When `filter` is set to `tag_function=oldest_tag()`, only tasks which have
      the same tag as the task with the oldest
      schedule_time will be returned.

      Grammar Syntax:

      * `filter = "tag=" tag | "tag_function=" function`

      * `tag = string`

      * `function = "oldest_tag()"`

      The `oldest_tag()` function returns tasks which have the same tag as the
      oldest task (ordered by schedule time).

      SDK compatibility: Although the SDK allows tags to be either
      string or
      [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
      only UTF-8 encoded tags can be used in Cloud Tasks. Tag which
      aren't UTF-8 encoded can't be used in the
      filter and the task's
      tag will be displayed as empty in Cloud Tasks.
  *   `leaseDuration` (*type:* `String.t`, *default:* `nil`) - Required. The duration of the lease.

      Each task returned in the response will
      have its schedule_time set to the current
      time plus the `lease_duration`. The task is leased until its
      schedule_time; thus, the task will not be
      returned to another LeaseTasks call
      before its schedule_time.


      After the worker has successfully finished the work associated
      with the task, the worker must call via
      AcknowledgeTask before the
      schedule_time. Otherwise the task will be
      returned to a later LeaseTasks call so
      that another worker can retry it.

      The maximum lease duration is 1 week.
      `lease_duration` will be truncated to the nearest second.
  *   `maxTasks` (*type:* `integer()`, *default:* `nil`) - The maximum number of tasks to lease.

      The system will make a best effort to return as close to as
      `max_tasks` as possible.

      The largest that `max_tasks` can be is 1000.

      The maximum total size of a lease tasks response is
      32 MB. If the sum of all task sizes requested reaches this limit,
      fewer tasks than requested are returned.
  *   `responseView` (*type:* `String.t`, *default:* `nil`) - The response_view specifies which subset of the Task will be
      returned.

      By default response_view is BASIC; not all
      information is retrieved by default because some data, such as
      payloads, might be desirable to return only when needed because
      of its large size or because of the sensitivity of data that it
      contains.

      Authorization for FULL requires
      `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
      permission on the Task resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :filter => String.t(),
          :leaseDuration => String.t(),
          :maxTasks => integer(),
          :responseView => String.t()
        }

  field(:filter)
  field(:leaseDuration)
  field(:maxTasks)
  field(:responseView)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTasks.V2beta2.Model.LeaseTasksRequest do
  def decode(value, options) do
    GoogleApi.CloudTasks.V2beta2.Model.LeaseTasksRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTasks.V2beta2.Model.LeaseTasksRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
